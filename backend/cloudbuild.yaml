steps:
  - name: 'gcr.io/cloud-builders/mvn'
    args: ['clean', 'package', '-DskipTests', '-Dquarkus.container-image.build=false']
    dir: 'backend'
    id: 'build-quarkus-jar'
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/my-quarkus-app:$COMMIT_SHA', '-f', 'backend/Dockerfile', 'backend']
    id: 'build-docker-image'
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/my-quarkus-app:$COMMIT_SHA']
    id: 'push-docker-image'
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'my-quarkus-service'
      - '--image=gcr.io/$PROJECT_ID/my-quarkus-app:$COMMIT_SHA'
      - '--platform=managed'
      - '--region=europe-west1'
      - '--allow-unauthenticated'
      - '--set-env-vars=QUARKUS_OIDC_CREDENTIALS_SECRET=$$AUTH0SECRET,QUARKUS_DATASOURCE_JDBC_URL=$$DB_URL,QUARKUS_DATASOURCE_USERNAME=$$DB_USERNAME,QUARKUS_DATASOURCE_PASSWORD=$$DB_PASSWORD'
    secretEnv: ['AUTH0SECRET', 'DB_URL', 'DB_USERNAME', 'DB_PASSWORD']
    id: 'deploy-to-cloud-run'
availableSecrets:
  secretManager:
    - env: 'AUTH0SECRET'
      versionName: 'projects/$PROJECT_NUMBER/secrets/AUTH0SECRET/versions/latest'
    - env: 'DB_URL'
      versionName: 'projects/$PROJECT_NUMBER/secrets/DB_URL/versions/latest'
    - env: 'DB_USERNAME'
      versionName: 'projects/$PROJECT_NUMBER/secrets/DB_USERNAME/versions/latest'
    - env: 'DB_PASSWORD'
      versionName: 'projects/$PROJECT_NUMBER/secrets/DB_PASSWORD/versions/latest'
images:
  - 'gcr.io/$PROJECT_ID/my-quarkus-app:$COMMIT_SHA'