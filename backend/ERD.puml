@startuml
skinparam linetype ortho

entity User {
  * id : Long
  --
  * username : string
  * email : string
	* shotlists: Set<Shotlist>
	* templates: Set<Template>
	* createdAt : LocalDateTime
}

entity Shotlist {
  * id : Long
  * owner : User
  * template: ShotlistTemplate
  * sceneAttributeDefinitions: Set<SceneAttributeDefinitionBase>
  * shotAttributeDefinitions: Set<ShotAttributeDefinitionBase>
  * scenes: Set<Scene>
  --
  * name : string
  * createdAt : LocalDateTime
  * editedAt : LocalDateTime
}

User ||--o{ Shotlist

/'
    TEMPLATE
'/

entity Template {
    * id : Long
    * owner : User
    * sceneAttributes: Set<SceneAttributeTemplateBase>
    * shotAttributes: Set<ShotAttributeTemplateBase>
    --
    * name : string
    * createdAt : LocalDateTime
}

User ||--o{ Template

abstract ShotAttributeTemplateBase {
    * id : Long
    * template : Template
    --
    * name : string
    * position : int
}

Template ||--o{ ShotAttributeTemplateBase

entity ShotSingleSelectAttributeTemplate {
    * options : Set<ShotSelectAttributeOptionTemplate>
    --
}

entity ShotMultiSelectAttributeTemplate {
    * options : Set<ShotSelectAttributeOptionTemplate>
    --
}

entity ShotSelectAttributeOptionTemplate {
    * id : Long
    --
    * name : string
    * position: int
}

ShotSingleSelectAttributeTemplate ||--o{ ShotSelectAttributeOptionTemplate
ShotMultiSelectAttributeTemplate ||--o{ ShotSelectAttributeOptionTemplate

entity ShotTextAttributeTemplate {
    --
}

ShotAttributeTemplateBase <|-down- ShotSingleSelectAttributeTemplate
ShotAttributeTemplateBase <|-down- ShotMultiSelectAttributeTemplate
ShotAttributeTemplateBase <|-down- ShotTextAttributeTemplate

abstract SceneAttributeTemplateBase {
    * id : Long
    * template : Template
    --
    * name : string
    * position : int
}

Template ||--o{ SceneAttributeTemplateBase

entity SceneSingleSelectAttributeTemplate {
    * options : Set<SceneSelectAttributeOptionTemplate>
    --
}

entity SceneMultiSelectAttributeTemplate {
    * options : Set<SceneSelectAttributeOptionTemplate>
    --
}

entity SceneSelectAttributeOptionTemplate {
    * id : Long
    --
    * name : string
    * position: int
}

SceneSingleSelectAttributeTemplate ||--o{ SceneSelectAttributeOptionTemplate
SceneMultiSelectAttributeTemplate ||--o{ SceneSelectAttributeOptionTemplate

entity SceneTextAttributeTemplate {
    --
}

SceneAttributeTemplateBase <|-down- SceneSingleSelectAttributeTemplate
SceneAttributeTemplateBase <|-down- SceneMultiSelectAttributeTemplate
SceneAttributeTemplateBase <|-down- SceneTextAttributeTemplate


/'
    SCENE ATTRIBUTE DEFINITIONS
'/

abstract SceneAttributeDefinitionBase {
    * id : Long
    --
    * name : string
    * position : int
}

Shotlist ||--o{ SceneAttributeDefinitionBase

entity SceneSingleSelectAttributeDefinition {
    * options : Set<SceneSelectAttributeOptionDefinition>
    --
}

entity SceneMultiSelectAttributeDefinition {
    * options : Set<SceneSelectAttributeOptionDefinition>
    --
}

entity SceneSelectAttributeOptionDefinition {
    * id : Long
    --
    * name : string
    * position: int
}

SceneSingleSelectAttributeDefinition ||--o{ SceneSelectAttributeOptionDefinition
SceneMultiSelectAttributeDefinition ||--o{ SceneSelectAttributeOptionDefinition

entity SceneTextAttributeDefinition {
    --
}

SceneAttributeDefinitionBase <|-down- SceneSingleSelectAttributeDefinition
SceneAttributeDefinitionBase <|-down- SceneMultiSelectAttributeDefinition
SceneAttributeDefinitionBase <|-down- SceneTextAttributeDefinition

/'
    SCENES
'/

entity Scene {
    * id : Long
    * shotlist : Shotlist
    * attributes: Set<SceneAttributeBase>
    * shots: Set<Shot>
    --
    * number : int
    * createdAt : LocalDateTime
}

Shotlist ||--o{ Scene

abstract SceneAttributeBase {
    * id : Long
    * shot : Shot
    --
}

Scene ||--o{ SceneAttributeBase

entity SceneSingleSelectAttribute {
    * value: ShotSelectAttributeOptionDefinition
    * definition : ShotSingleSelectAttributeDefinition
    --
}

SceneSingleSelectAttribute }o--|| SceneSelectAttributeOptionDefinition
SceneSingleSelectAttribute }o--|| SceneSingleSelectAttributeDefinition

entity SceneMultiSelectAttribute {
    * value: List<SceneSelectAttributeOptionDefinition>
    * definition : SceneMultiSelectAttributeDefinition
    --
}

SceneMultiSelectAttribute }o--o{ SceneSelectAttributeOptionDefinition
SceneMultiSelectAttribute }o--|| SceneMultiSelectAttributeDefinition

entity SceneTextAttribute {
    * definition : SceneTextAttributeDefinition
    --
    * value : string
}

SceneTextAttribute }o--|| SceneTextAttributeDefinition

SceneAttributeBase <|-down- SceneSingleSelectAttribute
SceneAttributeBase <|-down- SceneMultiSelectAttribute
SceneAttributeBase <|-down- SceneTextAttribute

/'
    SHOT ATTRIBUTES DEFINITIONS
'/

abstract ShotAttributeDefinitionBase {
    * id : Long
    --
    * name : string
    * position : int
}

Shotlist ||--o{ ShotAttributeDefinitionBase

entity ShotSingleSelectAttributeDefinition {
    * options : Set<ShotSelectAttributeOptionDefinition>
    --
}

entity ShotMultiSelectAttributeDefinition {
    * options : Set<ShotSelectAttributeOptionDefinition>
    --
}

entity ShotSelectAttributeOptionDefinition {
    * id : Long
    --
    * name : string
    * position: int
}

ShotSingleSelectAttributeDefinition ||--o{ ShotSelectAttributeOptionDefinition
ShotMultiSelectAttributeDefinition ||--o{ ShotSelectAttributeOptionDefinition

entity ShotTextAttributeDefinition {
    --
}

ShotAttributeDefinitionBase <|-down- ShotSingleSelectAttributeDefinition
ShotAttributeDefinitionBase <|-down- ShotMultiSelectAttributeDefinition
ShotAttributeDefinitionBase <|-down- ShotTextAttributeDefinition

/'
    SHOTS
'/

entity Shot {
    * id : Long
    * scene : Scene
    * attributes: Set<ShotAttributeBase>
    --
    * number: int
    * isSubshot: boolean
    * createdAt : LocalDateTime
}

Scene ||--o{ Shot

abstract ShotAttributeBase {
    * id : Long
    * shot : Shot
    --
}

Shot ||--o{ ShotAttributeBase

entity ShotSingleSelectAttribute {
    * value: ShotSelectAttributeOptionDefinition
    * definition : ShotSingleSelectAttributeDefinition
    --
}

ShotSingleSelectAttribute }o--|| ShotSelectAttributeOptionDefinition
ShotSingleSelectAttribute }o--|| ShotSingleSelectAttributeDefinition

entity ShotMultiSelectAttribute {
    * value: List<ShotSelectAttributeOptionDefinition>
    * definition : ShotMultiSelectAttributeDefinition
    --
}

ShotMultiSelectAttribute }o--o{ ShotSelectAttributeOptionDefinition
ShotMultiSelectAttribute }o--|| ShotMultiSelectAttributeDefinition

entity ShotTextAttribute {
    * definition : ShotTextAttributeDefinition
    --
    * value : string
}

ShotTextAttribute }o--|| ShotTextAttributeDefinition

ShotAttributeBase <|-down- ShotSingleSelectAttribute
ShotAttributeBase <|-down- ShotMultiSelectAttribute
ShotAttributeBase <|-down- ShotTextAttribute

/'
    NOTES
'/

entity ShotNote {
    * id : Long
    * shot : Shot
    * user : User
    --
    * text : string
    * createdAt : LocalDateTime
}

Shot ||--o{ ShotNote

/'
    SHARED USERS
'/

entity Collaborator {
    * id : Long
    * user : User
    * shotlist : Shotlist
    --
    * role : CollaboratorRole
}

enum CollaboratorRole {
  EDITOR
  VIEWER
}

Collaborator }o--|| CollaboratorRole
Collaborator }o--|| Shotlist
Collaborator }o-right-|| User

@enduml