:root {
  --accent-10: hsl(18, 95%, 10%);
  --accent-20: hsl(18, 95%, 20%);
  --accent-30: hsl(18, 95%, 30%);
  --accent-40: hsl(18, 100%, 40%);
  --accent-44: hsl(18, 100%, 44%);
  --accent: hsl(18, 100%, 47%);
  --accent-55: hsl(18, 100%, 55%);
  --accent-60: hsl(18, 100%, 60%);
  --accent-70: hsl(18, 100%, 70%);
  --accent-80: hsl(18, 100%, 75%);
  --accent-90: hsl(19, 81%, 86%);
  --accent-92: hsl(19, 81%, 92%);
  --accent-95: hsl(19, 81%, 95%);
  --accent-98: hsl(19, 81%, 98%);

  --bad-20: hsl(0, 70%, 20%);
  --bad-40: hsl(0, 70%, 50%);
  --bad: hsl(0, 70%, 60%);
  --bad-60: hsl(0, 70%, 65%);

  --good: hsl(120, 25%, 45%);

  --text: hsl(0, 0%, 0%);
  --text-10: hsl(0, 0%, 10%);
  --text-20: hsl(0, 0%, 20%);
  --text-30: hsl(0, 0%, 30%);
  --text-35: hsl(0, 0%, 35%);
  --text-40: hsl(0, 0%, 40%);
  --text-50: hsl(0, 0%, 50%);
  --text-60: hsl(0, 0%, 60%);
  --text-70: hsl(0, 0%, 70%);
  --text-80: hsl(0, 0%, 80%);
  --text-90: hsl(0, 0%, 90%);

  --contrast: hsl(0, 0%, 100%);
  --hover-bg-10: hsla(0, 0%, 50%, 10%);
  --hover-bg-20: hsla(0, 0%, 50%, 20%);
  --hover-bg-30: hsla(0, 0%, 50%, 30%);
  --hover-bg-bad-10: hsla(0, 70%, 60%, 10%);
  --hover-bg-good-10: hsla(120, 40%, 50%, 10%);
  --hover-bg-accent-10: hsla(20, 100%, 50%, 10%);

  --sidebar-bg: hsl(20, 20%, 96%);
  --home-button-bg: hsl(14, 21%, 92%);
  --home-button-border: hsl(0, 0%, 60%);
  --home-button-hover-border: hsl(0, 0%, 20%);
  --sidebar-bottom-button-bg: hsl(12, 9%, 92%);
  --sidebar-bottom-button-border: hsl(0, 0%, 74%);

  --popup-border: hsl(0, 0%, 82%);
  --select-menu-border: hsl(0, 0%, 75%);
  --select-menu-multivalue-bg: hsl(0, 0%, 95%);

  --dialog-close-button-bg: hsl(0, 0%, 90%);
  --dialog-close-button-hover-bg: hsl(0, 0%, 85%);

  --drag-handle-hover: hsl(0, 0%, 80%);

  --default-interactable-border: hsl(0, 0%, 82%);
  --default-interactable-hover-border: hsl(0, 0%, 20%);

  --sidebar-width: 400px;
}

/*@media (prefers-color-scheme: dark) {
  :root {
    --background: #0a0a0a;
    --foreground: #ededed;
  }

  html {
    color-scheme: dark;
  }
}*/

.noMobile{
  display: none;
  padding: 1rem;
}

@media screen and (max-width: 800px) {
  .noMobile{
    display: block;
  }
}

html,
body {
  max-width: 100vw;
  overflow: hidden;
  scroll-behavior: smooth;
}

body {
  color: var(--text);
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

* {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
  font: inherit;

  &:where(:focus-visible) {
    &:focus-visible {
      outline: .15rem solid var(--accent);
    }
  }
}

a {
  color: inherit;
  text-decoration: none;
  display: block;

  svg{
    display: block;
  }
}

img{
  /*
  width:100%;
  */
  display: block;
  object-fit: contain;
}

::selection{
  background-color: var(--accent-60);
  color: hsl(0, 0%, 0%);
}

.rootStack{
  position: relative;
  z-index: 0;
}

input, button{
  background-color: transparent;
  box-sizing: border-box;
  transition: color .15s ease-in-out, background-color .15s ease-in-out, border .15s ease-in-out, outline .15s ease-in-out;
}

button, a{
  display: flex;
  justify-content: space-between; /* This was a mistake but I wont refactor this :D */
  align-items: center;
  border: none;
  font-size: 1rem;
  border-radius: .4rem;
  padding: .5rem;
  transition: color .15s ease-in-out, background-color .15s ease-in-out, border .15s ease-in-out;
  cursor: pointer;
  gap: .5rem;
  user-select: none;
  margin: 0;

  &:not([disabled]):not(.noClickFx){
    &:active{
      transform: translate(0, 1px) scale(0.995);
    }

    &.default:hover{
      background-color: var(--hover-bg-10);
      color: var(--text);
      border-color: var(--default-interactable-hover-border);
    }

    &.bad:hover{
      background-color: var(--hover-bg-bad-10);
      color: var(--bad);
      border-color: var(--bad);
    }

    &.good:hover{
      background-color: var(--hover-bg-good-10);
      color: var(--good);
      border-color: var(--good);
    }

    &.accent:hover{
      background-color: var(--hover-bg-accent-10);
      color: var(--accent-55);
      border-color: var(--accent);
    }
  }

  &[disabled]{
    opacity: 70%;
    cursor: initial;
  }

  &.noPadding{
    padding: 0;
  }
}

span.bold, b{
  font-weight: bold;
}

// Sidebar styles

.sidebar{
  display: flex;
  flex-direction: column;
  height: 100%;
  flex-grow: 1;
  width: var(--sidebar-width);

  .content{
    display: flex;
    flex-direction: column;
    padding: .2rem .5rem;
    gap: .5rem;
    height: 100%;
    overflow-x: hidden;
    position: relative;

    .top{
      display: flex;
      gap: .2rem;
      align-items: center;

      a{
        background-color: var(--home-button-bg);
        padding: .15rem;
        aspect-ratio: 1;
        border-radius: 0.25rem;
        border: 1px solid var(--home-button-border);
        color: var(--text-20);

        &:hover{
          color: var(--text);
          background-color: var(--hover-bg-20);
          border-color: var(--home-button-hover-border);
        }
      }

      p{
        font-size: 1.25rem;
        color: var(--text-30);
        font-weight: 600;
      }

      input, h1{
        font-size: 1.25rem;
        font-weight: 600;
        border: none;
        color: var(--text);
        width: 100%;
      }
    }

    .list{
      display: flex;
      flex-direction: column;
      gap: .2rem;
      padding-bottom: 5rem;
      overflow-y: auto;
      -ms-overflow-style: none;  /* IE and Edge */
      scrollbar-width: none;  /* Firefox */
      height: 100%;

      &::-webkit-scrollbar {
        display: none; /*Chrome, Safari and Opera */
      }

      button.create{
        color: var(--text-40);

        &:hover{
          background-color: var(--hover-bg-10);
          color: var(--text);
        }
      }

      .Separator{
        background-color: var(--text-70);
      }

      > .bottom{
        position: absolute;
        bottom: 0;
        display: flex;
        flex-direction: column;
        gap: .3rem;
        margin-bottom: .3rem;
        left: .5rem;
        right: .5rem;

        button{
          background-color: var(--sidebar-bottom-button-bg);
          border: 1px solid var(--sidebar-bottom-button-border);
          width: 100%;
          font-size: .9rem;
          padding: .4rem;

          &:hover{
            border-color: var(--text-20);
          }
        }
      }
    }
  }

  >.bottom{
    margin-top: auto;
    height: fit-content;
    background-color: var(--sidebar-bottom-button-bg);
    border-top: 1px solid var(--sidebar-bottom-button-border);
    font-weight: bold;
    color: var(--accent-10);

    a{
      justify-content: center;
      font-size: .9rem;

      svg{
        color: var(--accent-40);
        height: 1rem;
      }
    }
  }
}

// Style radix collapsible

.CollapsibleContent {
  overflow: hidden;
}
.CollapsibleContent[data-state="open"] {
  animation: slideDown 300ms ease-out;
}
.CollapsibleContent[data-state="closed"] {
  animation: slideUp 300ms ease-out;
}

@keyframes slideDown {
  from {
    height: 0;
  }
  to {
    height: var(--radix-collapsible-content-height);
  }
}

@keyframes slideUp {
  from {
    height: var(--radix-collapsible-content-height);
  }
  to {
    height: 0;
  }
}

// Style radix dialog

.dialogOverlay{
  position: fixed;
  inset: 0;
  background-color: rgba(0, 0, 0, 0.4);
  /*z-index: 1000;*/
  animation: overlayShow 150ms cubic-bezier(0.16, 1, 0.3, 1);
}

.dialogContent{
  background-color: var(--contrast);
  border-radius: .5rem;
  padding: 1rem;
  width: 90%;
  max-width: 450px;
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  /*z-index: 1001;*/
  animation: contentShow 150ms cubic-bezier(0.16, 1, 0.3, 1);
}

@keyframes overlayShow {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes contentShow {
  from {
    opacity: 0;
    transform: translate(-50%, -48%) scale(0.96);
  }
  to {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1);
  }
}

// Style radix Separator

.Separator {
  background-color: var(--text-90);

  &[data-orientation="horizontal"] {
    --offset: 0rem;
    height: 1px;
    width: calc(100% - var(--offset)*2);
    margin-inline: var(--offset);
    margin-block: .5rem;
  }
  &[data-orientation="vertical"] {
    --offset: 0rem;
    width: 1px;
    height: calc(100% - var(--offset)*2);
    margin-block: var(--offset);
    margin-inline: .5rem;
  }
}

// Style radix popover

.PopoverContent{
  /*z-index: 3000;*/

  background-color: var(--contrast);
  padding: .5rem;
  border-radius: .5rem;
  border: 1px solid var(--popup-border);
}

//Style react-resizable-panels

.PanelResizeHandle{
  outline: 1px solid transparent;
  transition: outline-color .1s;

  &[data-resize-handle-state="hover"], &[data-resize-handle-state="drag"]{
    outline-color: var(--drag-handle-hover);
  }
}

// Style radix tooltip

.TooltipContent{
  background-color: var(--contrast);
  padding: .4rem;
  font-size: .9rem;
  border-radius: .5rem;
  border: 1px solid var(--popup-border);
  translate: 0 -.2rem;
  text-align: center;
  animation: slideUpAndFade 200ms ease-in-out;
  max-width: 300px;

  svg{
    fill: var(--popup-border);
  }
}

@keyframes slideUpAndFade {
  from {
    opacity: 0;
    transform: translateY(5px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

//style radix checkbox

.CheckboxRoot {
  background-color: var(--contrast);
  width: 1.7rem;
  height: 1.7rem;
  border-radius: .4rem;
  border: .15rem solid var(--default-interactable-border);
  display: grid;
  place-content: center;

  &:hover {
    background-color: var(--hover-bg-10);
  }
  &:focus {
    border-color: var(--default-interactable-hover-border);
  }
  &[data-state="checked"] {
    background-color: var(--hover-bg-accent-10);
    border-color: var(--accent-20);
  }
}

.CheckboxIndicator {
  color: var(--accent);
  display: grid;
  place-content: center;
}